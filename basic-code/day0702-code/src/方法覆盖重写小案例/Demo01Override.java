package 方法覆盖重写小案例;
/*
方法覆盖重写的注意事项：
1.必须保证父子类之间方法的名称相同，参数列表也相同
@Override：写在方法前面，用来检测是不是有效的正确覆盖重写，作为一个保险措施
这个注解就算不写，格式正确的话也是正确的覆盖重写

2.子类方法的返回值必须小于等于父类方法的返回值类型
Object类是所有类的公共最高父类

3.子类方法的权限必须大于等于父类方法的权限修饰符
public>protected>(default)>private
2.3作为了解

方法覆盖的使用条件：
原则：对于已经投入使用的类，尽量不要进行修改，推荐定义一个新的类，来重复利用其中共性内容，并且添加改动新内容
假设一款老手机作为一个类，具有打电话、发短信和来电显示（仅显示号码）三种方法
设计一款新手机作为一个类，具有打电话、发短信和来电显示（显示号码、显示姓名、显示头像）三种方法
对于打电话和发短信方法来说，直接继承老手机类即可，无需做改动，需要改动的仅仅是来电显示这一个方法，也就是方法的覆盖重写


 */

public class Demo01Override {
    public static void main(String[] args) {
        NewPhone newPhone=new NewPhone();
        newPhone.call("xk");
        newPhone.sendmessage("xk");
        newPhone.showcall();
    }
}
