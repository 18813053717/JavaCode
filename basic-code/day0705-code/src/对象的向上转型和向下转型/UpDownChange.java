package 对象的向上转型和向下转型;
/*
对象的向上转型，其实就是多态写法，向上转型一定是安全的，从小范围转向了大范围，从小范围的猫，向上转换成为更大范围的动物
格式：父类名称 对象名 =new 子类名称（）；
     接口名称 对象名 =new 实现类名称（）；
含义：创建一个子类对象，把它当做父类来看待使用
Animal animal=new Cat();
创建了一只猫，当做动物来看待

弊端：对象一旦向上转型为父类，那么就无法调用子类原本特有的内容
解决方案：用对象的向下转型还原
格式：子类名称 对象名=（子类名称）父类对象
含义：将父类对象还原成为本来的子类对象
Cat cat=(Cat) animal;//本来是猫，已经被当做动物了，现在还原回猫
必须保证对象本来创建的时候就是猫才能向下转型为猫，否则会报错
 */

public class UpDownChange {
}
