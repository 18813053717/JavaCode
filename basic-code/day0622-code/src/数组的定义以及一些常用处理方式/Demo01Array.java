package 数组的定义以及一些常用处理方式;
/*
数组：是一种容器，可以同时存放多个数据

数组的特点：
1.数组是一种引用数据类型
2.数组当中的多个数据类型必须统一
3.数组的长度在程序运行当中不可改变
数组的初始化：在内存中创建一个数组，并向其中赋予一些默认值
1.动态初始化（指定长度）
2.静态初始化（指定内容）


动态初始化数组的格式：
数据类型[]数组名称=new 数据类型[数组长度];
创建一个可以存放200个int数据的数组
  int [] arrayA = new int [200];


静态初始化数组的基本格式：
数据类型[]数组名称=new 数据类型[]{元素1,元素2,...};
创建一个数组，里面装具体int数字，具体为2/4/6/8
int[]arrayB=new int[]{2,4,6,8};

使用静态初始化数组的时候，格式还可以省略一下
静态初始化数组的省略格式：
数据类型[]数组名称={元素1,元素2,....}



注意事项：
1.数组是一定有长度，静态初始化虽然没有直接指定长度，但是仍然会自动推算出长度
2.静态初始化标准格式可以拆分成两个步骤
 int[] array=new int[]{1,2,3};
 等价于
 int[]array;
 array=new int[]{1,2,3};
3.动态初始化也可以拆分成两个步骤
int[]array=new int[5];
等价于
int[]array;
array=new int[5];
4.静态初始化一旦使用省略格式，就不能拆分成两个步骤了

使用建议：
如果不确定数组当中的具体内容，则使用动态初始化。若已经确定了数组当中的内容，则使用静态初始化
 */

public class Demo01Array {
    public static void main(String[] args) {
        //创建一个数组，里面可以存放200各个int数据

        int[]arrayA=new int[200];
        arrayA[0]=1;
        System.out.println(arrayA[0]);

        //创建一个数组，里面装具体int数字，具体为2/4/6/8
        int[]arrayB=new int[]{2,4,6,8};
        System.out.println(arrayB[0]);

        //创建一个数组，里面装具体字符串
        String[]arrayC={"HELLO","wORLD"};
        System.out.println(arrayC[0]);
    }
}
